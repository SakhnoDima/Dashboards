{
  "version": 3,
  "sources": ["browser-external:https", "../../public-google-sheets-parser/src/fetch.js", "../../public-google-sheets-parser/src/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "const https = require('https')\n\nconst nodeFetch = async (url) => {\n  return new Promise((resolve, reject) => {\n    const req = https.request(url, (res) => {\n      const body = []\n      let isStarted = false\n\n      res.on('data', (chunk) => {\n        if (!isStarted && !String(chunk).startsWith('/*O_o*/')) return resolve(null)\n        isStarted = true\n\n        body.push(chunk)\n      })\n\n      res.on('end', () => {\n        const response = { ok: true, text: () => Buffer.concat(body).toString() }\n        resolve(response)\n      })\n    })\n\n    req.on('error', reject)\n    req.end()\n  })\n}\n\nmodule.exports = nodeFetch\nmodule.exports.default = nodeFetch\n", "const isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nconst fetch = isBrowser ? /* istanbul ignore next */window.fetch : require('../src/fetch')\n\nclass PublicGoogleSheetsParser {\n  constructor (spreadsheetId, option) {\n    this.id = spreadsheetId\n    this.setOption(option)\n  }\n\n  setOption (option) {\n    if (!option) {\n      this.sheetName = this.sheetName || null\n      this.sheetId = this.sheetId || null\n      this.useFormattedDate = this.useFormattedDate || false\n      this.useFormat = this.useFormat || false\n    } else if (typeof option === 'string') {\n      this.sheetName = option\n      this.sheetId = this.sheetId || null\n    } else if (typeof option === 'object') {\n      this.sheetName = option.sheetName || this.sheetName\n      this.sheetId = option.sheetId || this.sheetId\n      this.useFormattedDate = option.hasOwnProperty('useFormattedDate') ? option.useFormattedDate : this.useFormattedDate\n      this.useFormat = option.hasOwnProperty('useFormat') ? option.useFormat : this.useFormat\n    }\n  }\n\n  isDate (date) {\n    return date && typeof date === 'string' && /Date\\((\\d+),(\\d+),(\\d+)\\)/.test(date)\n  }\n\n  async getSpreadsheetDataUsingFetch () {\n    if (!this.id) return null\n\n    let url = `https://docs.google.com/spreadsheets/d/${this.id}/gviz/tq?`\n    url += this.sheetId ? `gid=${this.sheetId}` : `sheet=${this.sheetName}`\n\n    try {\n      const response = await fetch(url)\n      return response && response.ok ? response.text() : null\n    } catch (e) {\n      /* istanbul ignore next */\n      console.error('Error fetching spreadsheet data:', e)\n      /* istanbul ignore next */\n      return null\n    }\n  }\n\n  normalizeRow (rows) {\n    return rows.map((row) => (row && (row.v !== null && row.v !== undefined)) ? row : {})\n  }\n\n  applyHeaderIntoRows (header, rows) {\n    return rows\n      .map(({ c: row }) => this.normalizeRow(row))\n      .map((row) => row.reduce((p, c, i) => (c.v !== null && c.v !== undefined)\n        ? Object.assign(p, { [header[i]]: this.useFormat ? c.f || c.v : this.useFormattedDate && this.isDate(c.v) ? c.f || c.v : c.v })\n        : p, {}))\n  }\n\n  getItems (spreadsheetResponse) {\n    let rows = []\n\n    try {\n      const payloadExtractRegex = /google\\.visualization\\.Query\\.setResponse\\(({.*})\\);/\n      const [_, payload] = spreadsheetResponse.match(payloadExtractRegex)\n      const parsedJSON = JSON.parse(payload)\n      const hasSomeLabelPropertyInCols = parsedJSON.table.cols.some(({ label }) => !!label)\n      if (hasSomeLabelPropertyInCols) {\n        const header = parsedJSON.table.cols.map(({ label }) => label)\n\n        rows = this.applyHeaderIntoRows(header, parsedJSON.table.rows)\n      } else {\n        const [headerRow, ...originalRows] = parsedJSON.table.rows\n        const header = this.normalizeRow(headerRow.c).map((row) => row.v)\n\n        rows = this.applyHeaderIntoRows(header, originalRows)\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      console.error('Error parsing spreadsheet data:', e)\n    }\n\n    return rows\n  }\n\n  async parse (spreadsheetId, option) {\n    if (spreadsheetId) this.id = spreadsheetId\n    if (option) this.setOption(option)\n\n    if (!this.id) throw new Error('SpreadsheetId is required.')\n\n    const spreadsheetResponse = await this.getSpreadsheetDataUsingFetch()\n\n    if (spreadsheetResponse === null) return []\n\n    return this.getItems(spreadsheetResponse)\n  }\n}\n\n/* istanbul ignore next */\nif (isBrowser && typeof module === 'undefined') {\n  window.PublicGoogleSheetsParser = PublicGoogleSheetsParser\n} else {\n  module.exports = PublicGoogleSheetsParser\n  module.exports.default = PublicGoogleSheetsParser\n}\n"],
  "mappings": "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",
  "names": []
}
